import Signal from "./qt/signal";

export default interface Options {
    focusPolicy: number;
    xwaylandCrashPolicy: number;
    xwaylandMaxCrashCount: number;
    nextFocusPrefersMouse: boolean;
    clickRaise: boolean;
    autoRaise: boolean;
    autoRaiseInterval: number;
    delayFocusInterval: number;
    shadeHover: boolean;
    shadeHoverInterval: number;
    separateScreenFocus: boolean;
    activeMouseScreen: boolean;
    placement: number;
    activationDesktopPolicy: number;
    focusPolicyIsReasonable: boolean;
    borderSnapZone: number;
    windowSnapZone: number;
    centerSnapZone: number;
    snapOnlyWhenOverlapping: boolean;
    rollOverDesktops: boolean;
    focusStealingPreventionLevel: number;
    operationTitlebarDblClick: number;
    operationMaxButtonLeftClick: number;
    operationMaxButtonMiddleClick: number;
    operationMaxButtonRightClick: number;
    commandActiveTitlebar1: number;
    commandActiveTitlebar2: number;
    commandActiveTitlebar3: number;
    commandInactiveTitlebar1: number;
    commandInactiveTitlebar2: number;
    commandInactiveTitlebar3: number;
    commandWindow1: number;
    commandWindow2: number;
    commandWindow3: number;
    commandWindowWheel: number;
    commandAll1: number;
    commandAll2: number;
    commandAll3: number;
    keyCmdAllModKey: number;
    condensedTitle: boolean;
    electricBorderMaximize: boolean;
    electricBorderTiling: boolean;
    electricBorderCornerRatio: number;
    borderlessMaximizedWindows: boolean;
    killPingTimeout: number;
    hideUtilityWindowsForInactive: boolean;
    compositingMode: number;
    useCompositing: boolean;
    hiddenPreviews: number;
    glSmoothScale: number;
    glStrictBinding: boolean;
    glStrictBindingFollowsDriver: boolean;
    glPreferBufferSwap: number;
    glPlatformInterface: number;
    windowsBlockCompositing: boolean;
    allowTearing: boolean;

    configChanged: Signal<() => void>;
    focusPolicyChanged: Signal<() => void>;
    focusPolicyIsResonableChanged: Signal<() => void>;
    xwaylandCrashPolicyChanged: Signal<() => void>;
    xwaylandMaxCrashCountChanged: Signal<() => void>;
    xwaylandEavesdropsChanged: Signal<() => void>;
    nextFocusPrefersMouseChanged: Signal<() => void>;
    clickRaiseChanged: Signal<() => void>;
    autoRaiseChanged: Signal<() => void>;
    autoRaiseIntervalChanged: Signal<() => void>;
    delayFocusIntervalChanged: Signal<() => void>;
    shadeHoverChanged: Signal<() => void>;
    shadeHoverIntervalChanged: Signal<() => void>;
    separateScreenFocusChanged: Signal<() => void>;
    activeMouseScreenChanged: Signal<() => void>;
    placementChanged: Signal<() => void>;
    activationDesktopPolicyChanged: Signal<() => void>;
    borderSnapZoneChanged: Signal<() => void>;
    windowSnapZoneChanged: Signal<() => void>;
    centerSnapZoneChanged: Signal<() => void>;
    snapOnlyWhenOverlappingChanged: Signal<() => void>;
    rollOverDesktopsChanged: Signal<() => void>;
    focusStealingPreventionLevelChanged: Signal<() => void>;
    operationTitlebarDblClickChanged: Signal<() => void>;
    operationMaxButtonLeftClickChanged: Signal<() => void>;
    operationMaxButtonRightClickChanged: Signal<() => void>;
    operationMaxButtonMiddleClickChanged: Signal<() => void>;
    commandActiveTitlebar1Changed: Signal<() => void>;
    commandActiveTitlebar2Changed: Signal<() => void>;
    commandActiveTitlebar3Changed: Signal<() => void>;
    commandInactiveTitlebar1Changed: Signal<() => void>;
    commandInactiveTitlebar2Changed: Signal<() => void>;
    commandInactiveTitlebar3Changed: Signal<() => void>;
    commandWindow1Changed: Signal<() => void>;
    commandWindow2Changed: Signal<() => void>;
    commandWindow3Changed: Signal<() => void>;
    commandWindowWheelChanged: Signal<() => void>;
    commandAll1Changed: Signal<() => void>;
    commandAll2Changed: Signal<() => void>;
    commandAll3Changed: Signal<() => void>;
    keyCmdAllModKeyChanged: Signal<() => void>;
    condensedTitleChanged: Signal<() => void>;
    electricBorderMaximizeChanged: Signal<() => void>;
    electricBorderTilingChanged: Signal<() => void>;
    electricBorderCornerRatioChanged: Signal<() => void>;
    borderlessMaximizedWindowsChanged: Signal<() => void>;
    killPingTimeoutChanged: Signal<() => void>;
    hideUtilityWindowsForInactiveChanged: Signal<() => void>;
    compositingModeChanged: Signal<() => void>;
    useCompositingChanged: Signal<() => void>;
    hiddenPreviewsChanged: Signal<() => void>;
    glSmoothScaleChanged: Signal<() => void>;
    glStrictBindingChanged: Signal<() => void>;
    glStrictBindingFollowsDriverChanged: Signal<() => void>;
    glPreferBufferSwapChanged: Signal<() => void>;
    glPlatformInterfaceChanged: Signal<() => void>;
    windowsBlockCompositingChanged: Signal<() => void>;
    animationSpeedChanged: Signal<() => void>;
    allowTearingChanged: Signal<() => void>;
}